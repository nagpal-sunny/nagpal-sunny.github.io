<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://codeworld.blog/</id><title>Code World 🌐</title><subtitle>Blog about iOS, Swift, Mobile Development and Design Pattern.</subtitle> <updated>2024-04-02T20:30:39+05:30</updated> <author> <name>Saurav Nagpal</name> <uri>http://codeworld.blog/</uri> </author><link rel="self" type="application/atom+xml" href="http://codeworld.blog/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="http://codeworld.blog/"/> <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator> <rights> © 2024 Saurav Nagpal </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Case 001 - AnyView kills Performance</title><link href="http://codeworld.blog/posts/ios/swift/anyview_impact-_performance/" rel="alternate" type="text/html" title="Case 001 - AnyView kills Performance" /><published>2024-03-01T18:22:00+05:30</published> <updated>2024-03-01T18:22:00+05:30</updated> <id>http://codeworld.blog/posts/ios/swift/anyview_impact-_performance/</id> <content src="http://codeworld.blog/posts/ios/swift/anyview_impact-_performance/" /> <author> <name>Saurav Nagpal</name> </author> <category term="iOS" /> <category term="Swift" /> <summary> 📋 Case Detail Recently, I was working on an application and looking for a solution to dynamically return a view from a method. The scenario was that TabBar children could be returned dynamically from a method. func viewForTabItem(_ coordinator: any ASTabItemView, isSelected: Bool) -&amp;gt; AnyView Observe that the method takes attributes for tab items (image, text) and returns respective view... </summary> </entry> <entry><title>What's System Design</title><link href="http://codeworld.blog/posts/system%20design/architecture/What's-System-Design/" rel="alternate" type="text/html" title="What's System Design" /><published>2024-01-01T09:22:00+05:30</published> <updated>2024-01-01T09:22:00+05:30</updated> <id>http://codeworld.blog/posts/system%20design/architecture/What's-System-Design/</id> <content src="http://codeworld.blog/posts/system%20design/architecture/What's-System-Design/" /> <author> <name>Saurav Nagpal</name> </author> <category term="System Design" /> <category term="Architecture" /> <summary> 🌑 Outline A common discussion in any team before starting any mobile application is which architecture should be followed. The discussion starts with the latest architecture trends and slowly reaches to what is the best architecture for mobile applications. Before discussing best architecture let’s discuss “what is architecture?” 🌥️ What is an Application Architecture The architecture word w... </summary> </entry> <entry><title>SwiftUI - Create Expandable List (Section Approach)</title><link href="http://codeworld.blog/posts/ios/swift/swiftui/Expandable-list/" rel="alternate" type="text/html" title="SwiftUI - Create Expandable List (Section Approach)" /><published>2023-09-26T11:22:00+05:30</published> <updated>2023-09-26T11:22:00+05:30</updated> <id>http://codeworld.blog/posts/ios/swift/swiftui/Expandable-list/</id> <content src="http://codeworld.blog/posts/ios/swift/swiftui/Expandable-list/" /> <author> <name>Saurav Nagpal</name> </author> <category term="iOS" /> <category term="Swift" /> <category term="SwiftUI" /> <summary> 🌑 Outline List View in Swift UI has the capability to support expandable lists without writing any extra logic for expansion or collapse. The section in a list can serve as the main cell and the cell can serve as the expended cell. Unlike UIKit, SwiftUI List View adjusts automatically based on the data source. No need to reload or delete cells just provide the expected format data and it will... </summary> </entry> <entry><title>Simplify Template Pattern (Behaviour Pattern)</title><link href="http://codeworld.blog/posts/design%20pattern/clean%20code/templatepattern/" rel="alternate" type="text/html" title="Simplify Template Pattern (Behaviour Pattern)" /><published>2023-09-20T20:00:10+05:30</published> <updated>2024-02-22T12:00:58+05:30</updated> <id>http://codeworld.blog/posts/design%20pattern/clean%20code/templatepattern/</id> <content src="http://codeworld.blog/posts/design%20pattern/clean%20code/templatepattern/" /> <author> <name>saurav_nagpal</name> </author> <category term="Design Pattern" /> <category term="Clean Code" /> <summary> 🌑 Outline The Template pattern defines steps for an algorithm in a superclass and a subclass can override specific steps to provide desired behaviour without changing the execution flow of the algorithm. The function that decides the execution sequence of an algorithm is called the Template method. Template - A structure to be followed for an algorithm. 🌥️ Why Template While writing cod... </summary> </entry> <entry><title>Game - Connect Balls</title><link href="http://codeworld.blog/posts/apps/apps-games-ConnectBall/" rel="alternate" type="text/html" title="Game - Connect Balls" /><published>2023-09-10T09:15:10+05:30</published> <updated>2023-10-22T15:20:11+05:30</updated> <id>http://codeworld.blog/posts/apps/apps-games-ConnectBall/</id> <content src="http://codeworld.blog/posts/apps/apps-games-ConnectBall/" /> <author> <name>Saurav Nagpal</name> </author> <category term="Apps" /> <summary> It is about: School time Memories are always there to cherish. Playing games on paper while the teacher is present in the classroom is what everyone remembers. This was one of the games I played most of the time with friends. The game is simple yet engaging. You have to connect all the balls (dots on the paper) with a line. The line can be drawn with the use of a joystick. Let’s play all t... </summary> </entry> </feed>
