

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Saurav Nagpal Writings</title>
  <subtitle>Blog about iOS, Swift, Mobile Development and Design Pattern.</subtitle>
  <updated>2023-08-21T13:29:46+05:30</updated>
  <author>
    <name>Saurav Nagpal</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Saurav Nagpal </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>ARC in Swift</title>
    <link href="http://localhost:4000/posts/enum/" rel="alternate" type="text/html" title="ARC in Swift" />
    <published>2023-07-15T14:22:00+05:30</published>
  
    <updated>2023-07-15T14:22:00+05:30</updated>
  
    <id>http://localhost:4000/posts/enum/</id>
    <content src="http://localhost:4000/posts/enum/" />
    <author>
      <name>Saurav Nagpal</name>
    </author>

  
    
    <category term="iOS" />
    
    <category term="ARC" />
    
    <category term="iOS Memory Management" />
    
  

  
    <summary>
      





          guard let category = attributes.filter({
        if case .category(_) = $0 {
            return true
        }
        return false
    }).first, case .category(let categoryMask) = category  else {
        return nil
    }


What is ARC?

ARC is a memory management tool which tracks and manages the application memory. It is a compiler-driven feature. It observes the reference count of objec...
    </summary>
  

  </entry>

  
  <entry>
    <title>ARC in Swift</title>
    <link href="http://localhost:4000/posts/arc-in-swift/" rel="alternate" type="text/html" title="ARC in Swift" />
    <published>2023-07-15T14:22:00+05:30</published>
  
    <updated>2023-08-08T22:15:41+05:30</updated>
  
    <id>http://localhost:4000/posts/arc-in-swift/</id>
    <content src="http://localhost:4000/posts/arc-in-swift/" />
    <author>
      <name>Saurav Nagpal</name>
    </author>

  
    
    <category term="iOS" />
    
    <category term="ARC" />
    
    <category term="iOS Memory Management" />
    
  

  
    <summary>
      





      One of the key factors for the success of any application is its performance. Effective Memory Management in an application is crucial for better performance of the application. iOS applications developed using Swift language rely on ARC for tracking and managing application memory usage. ARC uses reference counting to manage the application memory.

What is ARC?

ARC is a memory management too...
    </summary>
  

  </entry>

  
  <entry>
    <title>Distribute iOS Beta Build (Scheme &amp; Configurations)</title>
    <link href="http://localhost:4000/posts/iOS-Custom-Build-Scheme/" rel="alternate" type="text/html" title="Distribute iOS Beta Build (Scheme &amp;amp; Configurations)" />
    <published>2023-07-02T17:01:10+05:30</published>
  
    <updated>2023-07-02T17:01:10+05:30</updated>
  
    <id>http://localhost:4000/posts/iOS-Custom-Build-Scheme/</id>
    <content src="http://localhost:4000/posts/iOS-Custom-Build-Scheme/" />
    <author>
      <name>Saurav Nagpal</name>
    </author>

  
    
    <category term="iOS" />
    
    <category term="iOS Beta Build" />
    
  

  
    <summary>
      





      

 Overview

Having multiple build configurations during the application’s development phase is a good practice. Customers can ask for both debug and release configuration builds. Beta and Alpha testing is an important phase of the application life cycle. Beta and Alpha builds might have a different configurations from the release build. This blog explains one of the ways to handle this through...
    </summary>
  

  </entry>

  
  <entry>
    <title>Design Pattern Series: Decorator Pattern (Structure Pattern)</title>
    <link href="http://localhost:4000/posts/decoratorpattern/" rel="alternate" type="text/html" title="Design Pattern Series: Decorator Pattern (Structure Pattern)" />
    <published>2023-06-24T20:00:10+05:30</published>
  
    <updated>2023-06-24T20:00:10+05:30</updated>
  
    <id>http://localhost:4000/posts/decoratorpattern/</id>
    <content src="http://localhost:4000/posts/decoratorpattern/" />
    <author>
      <name>Saurav Nagpal</name>
    </author>

  
    
    <category term="Design Pattern" />
    
    <category term="Clean Code" />
    
  

  
    <summary>
      





      

 Overview



 Decorator Pattern - Decorate an object (wrapper of an object).

The decorator pattern is used to add new functionality to an existing object without changing its structure. A wrapper on the existing object is created to add new functionality.







 Problem Statement

One day I woke up and as per my daily routine attended the daily scrum parallelly checking the customer email. ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Design Pattern Series: Facade Pattern (Structure Pattern)</title>
    <link href="http://localhost:4000/posts/Facadepattern/" rel="alternate" type="text/html" title="Design Pattern Series: Facade Pattern (Structure Pattern)" />
    <published>2023-06-24T20:00:10+05:30</published>
  
    <updated>2023-06-24T20:00:10+05:30</updated>
  
    <id>http://localhost:4000/posts/Facadepattern/</id>
    <content src="http://localhost:4000/posts/Facadepattern/" />
    <author>
      <name>Saurav Nagpal</name>
    </author>

  
    
    <category term="Design Pattern" />
    
    <category term="Clean Code" />
    
  

  
    <summary>
      





      

 Overview



 Facade - Face of a building.

A pattern to provide a simple interface to a complex framework or library. It hides the complexity and interaction between different objects in the framework.







 Problem Statement

Suppose you are working on an e-commerce application. You have to support multiple payment options like UPI, Credit card, Debit Card, Wallet etc. You have chosen a t...
    </summary>
  

  </entry>

</feed>


